import cv2

# Load the model
config_file= "C:\\Users\\ACER\Downloads\\ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt"
frozen_model = "C:\\Users\\ACER\\Downloads\\frozen_inference_graph.pb"
model = cv2.dnn_DetectionModel(frozen_model, config_file)
model.setInputSize(320, 320)
model.setInputScale(1.0 / 127.5)
model.setInputMean((127.5, 127.5, 127.5))
model.setInputSwapRB(True)

# For Video
cap = cv2.VideoCapture("C:\\Users\\ACER\\Downloads\\17476835-hd_1920_1080_30fps.mp4")
if not cap.isOpened():
    cap = cv2.VideoCapture(1)
if not cap.isOpened():
    raise IOError("Can't open the video")

font_scale = 3
font = cv2.FONT_HERSHEY_PLAIN

while True:
    ret, frame = cap.read()

    if not ret:
        print("Error: Can't receive frame (stream end?). Exiting ...")
        break

    ClassIndex, confidence, bbox = model.detect(frame, confThreshold=0.55)

    print(ClassIndex)
    
    if len(ClassIndex) != 0:
        for ClassInd, conf, box in zip(ClassIndex.flatten(), confidence.flatten(), bbox):
            if ClassInd <= 80:
                cv2.rectangle(frame, (box[0], box[1]), (box[2], box[3]), (20, 0, 0), 2)
                cv2.putText(frame, classLabels[ClassInd - 1], (box[0] + 10, box[1] + 40), font, fontScale=font_scale, color=(0, 255, 0), thickness=3)
                
    cv2.imshow('Object Detection', frame)
    if cv2.waitKey(2) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
